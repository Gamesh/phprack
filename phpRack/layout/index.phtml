<!--
 * @version $Id$
-->
<html>
    <head>
        <style type="text/css"><?php include PHPRACK_PATH . '/layout/index.css' ?></style>
        <title>phpRack Testing Report</title>
    </head>

    <body>
        <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>

        <div id='logo'>
            <a href='http://www.phprack.com' target="_blank"><img
                src='data:image/png;base64,<?php 
                    echo base64_encode(
                        file_get_contents(PHPRACK_PATH . '/layout/logo.png')
                    )
                ?>'
                alt='phpRack' /></a>
            <span>v<?php echo PHPRACK_VERSION?></span>
        </div>

        <?php $i = 0; ?>
        <?php $jsCalls = array(); ?>
        <div id='task-list'>
            <?php foreach ($this->runner->getTests() as $test): ?>

            <div id="d<?php echo ++$i?>" class="task">
                <span class="label"><?php echo $test->getLabel() ?>:</span>
                <span class="result">running...</span>
                <pre style="display:none;"></pre>
            </div>
                <?php $jsCalls[$i] = $this->jsPath($test->getFileName())?>
            <?php endforeach; ?>
        </div>

        <script type="text/javascript">
            $(
                function()
                {
                    var calls = {
                        <?php $jsCallsCount = count($jsCalls) ?>
                        <?php foreach ($jsCalls as $i => $testName): ?>
                            'div#d<?php echo $i ?>': '<?php echo $testName?>'<?php if ($i < $jsCallsCount) echo ',' ?>
                        <?php endforeach; ?>
                    };

                    function phpRack_Timer(options)
                    {
                        var that = {
                            elapsedSeconds: 0,
                            intervalId: null,
                            options: {onTick: null},
                            __construct: function(options)
                            {
                                $.extend(that.options, options);
                            },
                            tick: function()
                            {
                                that.elapsedSeconds++;
                                if (that.options.onTick != null) {
                                    that.options.onTick(that);
                                }
                            },
                            start: function()
                            {
                                that.stop();
                                that.elapsedSeconds = 0;
                                that.intervalId = window.setInterval(that.tick, 1000);
                            },
                            stop: function()
                            {
                                if (that.intervalId != null) {
                                    window.clearInterval(that.intervalId);
                                }
                                that.intervalId = null;
                            },
                            getFormattedTime: function()
                            {
                                var result = '';
                                var minutes = Math.floor(that.elapsedSeconds / 60);
                                var seconds = that.elapsedSeconds % 60;
                                result += minutes + ':';
                                if (seconds < 10) {
                                    result += '0';
                                }
                                result += seconds;
                                return result;
                            },
                            getElapsedSeconds: function()
                            {
                                return that.elapsedSeconds;
                            },
                            isActive: function()
                            {
                                return that.intervalId != null;
                            }
                        }
                        that.__construct(options);
                        return that;
                    }

                    function phpRack_Test(options)
                    {
                        var $this = $(options.id);
                        var that = {
                            options: options,
                            timer: null,
                            isRunning: false,
                            $result: $this.find('span.result'),
                            $label: $this.find('span.label'),
                            $message: $this.find('pre'),
                            displayTimer: false,
                            __construct: function()
                            {
                                that.timer = new phpRack_Timer({onTick: that.onTimerTick});

                                that.$result.click(
                                    function()
                                    {
                                        that.$message.slideToggle();
                                    }
                                );
                                that.$label.click(
                                    function()
                                    {
                                        that.displayTimer = true;
                                        that.run();
                                    }
                                );
                            },
                            _setStatus: function (success, message)
                            {
                                if (success == true) {
                                    that.$result.html('<?php echo phpRack_Test::OK?>').addClass('success');
                                } else {
                                    that.$result.html('<?php echo phpRack_Test::FAILURE?>').addClass('failure');
                                }

                                that.$message.html(message);
                                that.isRunning = false;
                                that.timer.stop();
                            },
                            _startTimer: function()
                            {
                                that.timer.start();
                                that.onTimerTick();
                            },
                            onTimerTick: function()
                            {
                                if (that.timer.getElapsedSeconds() > 5) {
                                    that.displayTimer = true;
                                }

                                if (that.displayTimer) {
                                    that.$result.html('Running (' + that.timer.getFormattedTime() + ')...');
                                }
                            },
                            run: function()
                            {
                                if (that.timer.isActive()) {
                                    that.displayTimer = true;
                                    that.onTimerTick();
                                    return;
                                }

                                that._startTimer();

                                that.isRunning = true;
                                that.$result.html('Running...');
                                that.$result.removeClass('success failure');

                                $.ajax(
                                    {
                                        url: that.options.url,
                                        data: that.options.data,
                                        dataType: 'json',
                                        cache: false,
                                        success: function (json)
                                        {
                                            that.$message.removeClass('word_wrap');
                                            if (json) {
                                                that._setStatus(json.success, json.log);
                                            } else {
                                                that._setStatus(false, 'Server returned empty response');
                                            }
                                        },
                                        error: function (XMLHttpRequest, textStatus, errorThrown)
                                        {
                                            that.$message.addClass('word_wrap');
                                            that._setStatus(false, errorThrown);
                                        }
                                    }
                                );
                            }
                        }

                        that.__construct();
                        return that;
                    }

                    for (var id in calls) {
                        var test = new phpRack_Test(
                            {
                                id: id,
                                url: '<?php echo $_SERVER['REQUEST_URI']?>',
                                data: {
                                    '<?php echo PHPRACK_AJAX_TAG?>': calls[id],
                                    '<?php echo PHPRACK_AJAX_TOKEN?>': id
                                }
                            }
                        );
                        test.run();
                    }
                }
            );
        </script>
    </body>
</html>
