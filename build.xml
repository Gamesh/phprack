<?xml version="1.0" ?>
<!--
 *
 * phpRack: Integration Testing Framework
 *
 * This source file is subject to the new BSD license that is bundled
 * with this package in the file LICENSE.txt. It is also available 
 * through the world-wide-web at this URL: http://www.phprack.com/license
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@phprack.com so we can send you a copy immediately.
 *
 * @copyright Copyright (c) phpRack.com
 * @version $Id$
 * @category phpRack
 *
 * This Phing build file. For more information see this document:
 * http://phing.info/docs/guide/current/
 *
-->

<project name="phpRack tests" basedir="." default="main"> 

    <!-- Sets the DSTAMP, TSTAMP and TODAY properties --> 
    <tstamp/>

    <includepath classpath="${project.basedir}" />
    <includepath classpath="${project.basedir}/test/" />

    <target name="main" depends="lint, phpcs, phpmd, test" >
    </target>

    <target name="lint" description="Run syntax check for all classes" >
        <phplint haltonfailure="yes" level="verbose">
            <fileset dir="${project.basedir}">
                <include name="**/*.php"/>
                <include name="**/*.html"/>
                <include name="**/*.phtml"/>
                <exclude name=".svn/**"/>
            </fileset>
        </phplint>
    </target>

    <target name="phpcs" description="Validate the quality of PHP code with PHPCS utility">
        <exec command="phpcs 
            -n
            --report=full
            --standard=Zend 
            --ignore='.svn/*' 
            --extensions='php,phtml' 
            ${project.basedir}" 
            escape="false"
            checkreturn="true" 
            passthru="true" />
    </target>

    <zendcodeanalyzer analyzerPath="zca" haltonwarning="true">
        <fileset dir="${project.basedir}">
            <include name="**/*.php" />
            <include name="**/*.phtml" />
            <exclude name=".svn/**" />
        </fileset>
    </zendcodeanalyzer>

    <target name="phpmd" description="PHP Mess Detector (PHPMD)">
        <exec command="phpmd 
            ${project.basedir} 
            text
            codesize,unusedcode
            --extensions='php,phtml'
            "
            escape="false"
            checkreturn="true" 
            passthru="true" />
    </target>

    <target name="test" description="Run all existing unit-tests">
        <property name="coverage.db" value="${project.basedir}/build/coverage.data" />
        
        <!-- create coverage database that will collect all reports -->
        <coverage-setup database="${coverage.db}">
            <fileset dir="${project.basedir}/phpRack">
                <include name="**/*.php"/>
                <exclude name=".svn/**"/>
            </fileset>
        </coverage-setup>
        
		<phpunit printsummary="yes" haltonerror="yes" haltonfailure="yes" codecoverage="true">
			<formatter type="plain" usefile="no" />
			<batchtest>
				<fileset dir="${project.basedir}/test">
					<include name="**/*Test*.php"/>
					<exclude name="**/Abstract*.php"/>
					<exclude name="**/_*.php"/>
					<exclude name=".svn/**"/>
					<exclude name="**/integration-tests/**"/>
				</fileset>
			</batchtest>
		</phpunit>

        <!-- make sure that the code is covered -->
        <coverage-threshold database="${coverage.db}"
            perProject="80"
            perClass="0"
            perMethod="0"
            />
    </target>
    
    <target name="deploy" description="Deploy stable TGZ by FTP and other files">
        <property name="build.tgz" value="${project.basedir}/build/phpRack-stable.tgz" />

        <!-- get FTP properties from file -->
        <property file="./build.properties" />
        
        <tar destfile="${build.tgz}" compression="gzip">
            <fileset dir="${project.basedir}">
                <include name="phpRack/**" />
                <include name="LICENSE.txt" />
                <exclude name=".svn/**" />
            </fileset>
        </tar>
		<echo message="uploading .tgz to the server..." />
		<ftpdeploy host="phprack.com" username="${ftp.username}" password="${ftp.password}"
			dir="./public">
			<fileset dir="${project.basedir}/build">
				<include name="phpRack-stable.tgz"/>
			</fileset>
		</ftpdeploy>
      	<delete file="${build.tgz}" />
      
		<echo message="uploading PHP code to the server..." />
		<ftpdeploy host="phprack.com" username="${ftp.username}" password="${ftp.password}">
			<fileset dir="${project.basedir}">
				<include name="phpRack/**"/>
				<exclude name=".svn/**" />
			</fileset>
			<fileset dir="${project.basedir}/test">
				<include name="integration-tests/**"/>
				<exclude name=".svn/**" />
			</fileset>
		</ftpdeploy>

		<ftpdeploy host="phprack.com" username="${ftp.username}" password="${ftp.password}"
			dir="./public">
			<fileset dir="${project.basedir}/phprack.com">
				<include name="**"/>
				<exclude name=".svn/**" />
			</fileset>
		</ftpdeploy>
	</target>

</project>
